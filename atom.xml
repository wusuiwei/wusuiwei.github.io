<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>wusuiwei</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wusuiwei.github.io/"/>
  <updated>2020-07-11T12:16:03.474Z</updated>
  <id>http://wusuiwei.github.io/</id>
  
  <author>
    <name>wusuiwei</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【微服务】配置中心</title>
    <link href="http://wusuiwei.github.io/2020/07/12/03_%E7%BC%96%E7%A8%8B%E6%80%9D%E6%83%B3/%E3%80%90%E5%BE%AE%E6%9C%8D%E5%8A%A1%E3%80%91%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/"/>
    <id>http://wusuiwei.github.io/2020/07/12/03_编程思想/【微服务】配置中心/</id>
    <published>2020-07-11T18:38:09.000Z</published>
    <updated>2020-07-11T12:16:03.474Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>不积跬步，无以至千里；不积小流，无以成江海。</p></blockquote><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;不积跬步，无以至千里；不积小流，无以成江海。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="编程思想" scheme="http://wusuiwei.github.io/categories/%E7%BC%96%E7%A8%8B%E6%80%9D%E6%83%B3/"/>
    
    
      <category term="微服务" scheme="http://wusuiwei.github.io/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
      <category term="配置中心" scheme="http://wusuiwei.github.io/tags/%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>【微服务】微服务注册与发现机制</title>
    <link href="http://wusuiwei.github.io/2020/07/11/03_%E7%BC%96%E7%A8%8B%E6%80%9D%E6%83%B3/%E3%80%90%E5%BE%AE%E6%9C%8D%E5%8A%A1%E3%80%91%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%8F%91%E7%8E%B0/"/>
    <id>http://wusuiwei.github.io/2020/07/11/03_编程思想/【微服务】注册与发现/</id>
    <published>2020-07-11T11:38:09.000Z</published>
    <updated>2020-07-11T12:12:43.921Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>不积跬步，无以至千里；不积小流，无以成江海。</p></blockquote><p>为了实现服务间的调用，如果硬编码服务提供者的地址，则会有不少问题，比如：</p><ul><li>适用场景有限（如果提供者的网络地址发生变化，将会影响服务消费者）</li><li>无法动态伸缩（生产环境一般需要运行多个实例，从而实现容灾和负载均衡，硬编码服务满足这种需求）</li></ul><p>因此，要解决这些问题，则需要<strong>微服务注册与发现机制</strong>。</p><a id="more"></a><h3 id="注册中心原理"><a href="#注册中心原理" class="headerlink" title="注册中心原理"></a>注册中心原理</h3><p><strong>注册中心</strong>主要涉及三种角色，他们之间的关系如下图：</p><ul><li><strong>服务提供者（RPC Server）</strong></li><li><strong>服务消费者（RPC Client）</strong></li><li><strong>服务注册中心（Registry）</strong></li></ul><p><img src="/images/2019062410270551.png" alt="注册中心原理图"></p><p>RPC Server 提供服务，在启动时，根据服务发布文件 server.xml 中的配置的信息，向 Registry 注册自身服务，并向 Registry 定期发送心跳汇报存活状态。</p><p>RPC Client 调用服务，在启动时，根据服务引用文件 client.xml 中配置的信息，向 Registry 订阅服务，把 Registry 返回的服务节点列表缓存在本地内存中，并与 RPC Sever 建立连接。</p><p>当 RPC Server 节点发生变更时，Registry 会同步变更，RPC Client 感知后会刷新本地内存中缓存的服务节点列表。</p><p>RPC Client 从本地缓存的服务节点列表中，基于负载均衡算法选择一台 RPC Sever 发起调用。</p><h3 id="注册中心实现方式"><a href="#注册中心实现方式" class="headerlink" title="注册中心实现方式"></a>注册中心实现方式</h3><h4 id="注册中心API"><a href="#注册中心API" class="headerlink" title="注册中心API"></a>注册中心API</h4><p>根据<a href="#注册中心原理">注册中心原理</a>描述，注册中心必须提供以下API，例如：</p><ul><li>服务注册接口：服务提供者通过调用服务注册接口来完成服务注册。</li><li>服务反注册接口：服务提供者通过调用服务反注册接口来完成服务注销。</li><li>心跳汇报接口：服务提供者通过调用心跳汇报接口完成节点存活状态上报。</li><li>服务订阅接口：服务消费者通过调用服务订阅接口完成服务订阅，获取可用的服务提供者节点列表。</li><li>服务变更查询接口：服务消费者通过调用服务变更查询接口，获取最新的可用服务节点列表。</li></ul><p>还应该提供后台管理的API，例如：</p><ul><li>服务查询接口：查询注册中心当前注册了哪些服务信息。</li><li>服务修改接口：修改注册中心中某一服务的信息。</li></ul><h4 id="集群部署"><a href="#集群部署" class="headerlink" title="集群部署"></a>集群部署</h4><p><strong>注册中心作为服务提供者和服务消费者的桥梁，非常重要。所以注册中心一般采用集群的方式保证高可用性，并通过分布式一致性协议来确保集群中不同节点之间的数据保持一致。(集群如何保证一致性在zookeeper资料中详细讲解)</strong></p><p>以开源注册中心 ZooKeeper 为例，ZooKeeper 集群中包含多个节点，服务提供者和服务消费者可以同任意一个节点通信，因为它们的数据一定是相同的，这是为什么呢？这就要从 ZooKeeper 的工作原理说起：</p><p>每个 Server 在内存中存储了一份数据，Client 的读请求可以请求任意一个 Server。</p><p>ZooKeeper 启动时，将从实例中选举一个 leader（Paxos 协议）。</p><p>Leader 负责处理数据更新等操作（ZAB 协议）。</p><p>一个更新操作成功，当且仅当大多数 Server 在内存中成功修改 。</p><p>通过上面这种方式，ZooKeeper 保证了高可用性以及数据一致性。</p><h4 id="目录存储"><a href="#目录存储" class="headerlink" title="目录存储"></a>目录存储</h4><p><strong>注册中心存储服务信息一般采用层次化的目录结构。</strong></p><p>每个目录在 ZooKeeper 中叫作 znode，并且其有一个唯一的路径标识。</p><p>znode 可以包含数据和子 znode。</p><p>znode 中的数据可以有多个版本，比如某一个 znode 下存有多个数据版本，那么查询这个路径下的数据需带上版本信息。</p><h4 id="健康状态检查"><a href="#健康状态检查" class="headerlink" title="健康状态检查"></a>健康状态检查</h4><p><strong>注册中心除了要支持最基本的服务注册和服务订阅功能以外，还必须具备对服务提供者节点的健康状态检测功能，这样才能保证注册中心里保存的服务节点都是可用的。</strong></p><p>以 ZooKeeper 为例，它是基于 ZooKeeper 客户端和服务端的长连接和会话超时控制机制，来实现服务健康状态检测的。</p><p>在 ZooKeeper 中，客户端和服务端建立连接后，会话也随之建立，并生成一个全局唯一的 Session ID。服务端和客户端维持的是一个长连接，在 SESSION_TIMEOUT 周期内，服务端会检测与客户端的链路是否正常，具体方式是通过客户端定时向服务端发送心跳消息（ping 消息），服务器重置下次 SESSION_TIMEOUT 时间。如果超过 SESSION_TIMEOUT 后服务端都没有收到客户端的心跳消息，则服务端认为这个 Session 就已经结束了，ZooKeeper 就会认为这个服务节点已经不可用，将会从注册中心中删除其信息。</p><h4 id="服务状态变更通知"><a href="#服务状态变更通知" class="headerlink" title="服务状态变更通知"></a>服务状态变更通知</h4><p><strong>一旦注册中心探测到有服务提供者节点新加入或者被剔除，就必须立刻通知所有订阅该服务的服务消费者，刷新本地缓存的服务节点信息，确保服务调用不会请求不可用的服务提供者节点。</strong></p><p>继续以 ZooKeeper 为例，基于 ZooKeeper 的 Watcher 机制，来实现服务状态变更通知给服务消费者的。服务消费者在调用 ZooKeeper 的 getData 方法订阅服务时，还可以通过监听器 Watcher 的 process 方法获取服务的变更，然后调用 getData 方法来获取变更后的数据，刷新本地缓存的服务节点信息。</p><h4 id="白名单机制"><a href="#白名单机制" class="headerlink" title="白名单机制"></a>白名单机制</h4><p>在实际的微服务测试和部署时，通常包含多套环境，比如生产环境一套、测试环境一套。开发在进行业务自测、测试在进行回归测试时，一般都是用测试环境，部署的 RPC Server 节点注册到测试的注册中心集群。但经常会出现开发或者测试在部署时，错误的把测试环境下的服务节点注册到了线上注册中心集群，这样的话线上流量就会调用到测试环境下的 RPC Server 节点，可能会造成意想不到的后果。</p><p>为了防止这种情况发生，注册中心需要提供一个保护机制，你可以把注册中心想象成一个带有门禁的房间，只有拥有门禁卡的 RPC Server 才能进入。在实际应用中，注册中心可以提供一个白名单机制，只有添加到注册中心白名单内的 RPC Server，才能够调用注册中心的注册接口，这样的话可以避免测试环境中的节点意外跑到线上环境中去。</p><hr><h3 id="疑难问题总结"><a href="#疑难问题总结" class="headerlink" title="疑难问题总结"></a>疑难问题总结</h3><p><strong>疑问：注册中心与传统DNS实现服务发现有什么不同？</strong></p><ul><li><p>注册中心的服务注册和发现都是基于API的，可以自动化注册与发现，dns则是人工注册。这样也导致前者实时性、容错性好于后者。</p></li><li><p>注册中心可以注册http、rpc等各种服务，dns只能注册http服务</p></li><li><p>注册中心对已注册的服务会有主动的、自动化的健康检查机制，dns没有。</p></li><li><p>注册中心一般是一级分布式的，dns则是多级架构，例如根域名服务器、权威域名服务器等</p></li><li><p>注册中心的安全机制相对dns弱一些，毕竟是内部使用。</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;不积跬步，无以至千里；不积小流，无以成江海。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;为了实现服务间的调用，如果硬编码服务提供者的地址，则会有不少问题，比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;适用场景有限（如果提供者的网络地址发生变化，将会影响服务消费者）&lt;/li&gt;
&lt;li&gt;无法动态伸缩（生产环境一般需要运行多个实例，从而实现容灾和负载均衡，硬编码服务满足这种需求）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此，要解决这些问题，则需要&lt;strong&gt;微服务注册与发现机制&lt;/strong&gt;。&lt;/p&gt;
    
    </summary>
    
    
      <category term="编程思想" scheme="http://wusuiwei.github.io/categories/%E7%BC%96%E7%A8%8B%E6%80%9D%E6%83%B3/"/>
    
    
      <category term="微服务" scheme="http://wusuiwei.github.io/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
      <category term="注册中心" scheme="http://wusuiwei.github.io/tags/%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>02_全栈笔记/【Jmeter】命令行运行</title>
    <link href="http://wusuiwei.github.io/2020/07/08/02_%E5%85%A8%E6%A0%88%E7%AC%94%E8%AE%B0/%E3%80%90Jmeter%E3%80%91%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%BF%90%E8%A1%8C/"/>
    <id>http://wusuiwei.github.io/2020/07/08/02_全栈笔记/【Jmeter】命令行运行/</id>
    <published>2020-07-08T02:58:05.100Z</published>
    <updated>2020-07-08T02:58:05.100Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>02_全栈笔记/【Mockito】</title>
    <link href="http://wusuiwei.github.io/2020/06/05/02_%E5%85%A8%E6%A0%88%E7%AC%94%E8%AE%B0/%E3%80%90Mockito%E3%80%91/"/>
    <id>http://wusuiwei.github.io/2020/06/05/02_全栈笔记/【Mockito】/</id>
    <published>2020-06-05T03:54:08.356Z</published>
    <updated>2020-06-05T03:54:08.356Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>06_头脑风暴/在线教育的遐想</title>
    <link href="http://wusuiwei.github.io/2020/05/24/06_%E5%A4%B4%E8%84%91%E9%A3%8E%E6%9A%B4/%E5%9C%A8%E7%BA%BF%E6%95%99%E8%82%B2%E7%9A%84%E9%81%90%E6%83%B3/"/>
    <id>http://wusuiwei.github.io/2020/05/24/06_头脑风暴/在线教育的遐想/</id>
    <published>2020-05-24T14:28:44.566Z</published>
    <updated>2020-05-24T14:28:44.566Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>05_读书笔记/书籍购买-20191112</title>
    <link href="http://wusuiwei.github.io/2020/05/24/05_%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E4%B9%A6%E7%B1%8D%E8%B4%AD%E4%B9%B0-20191112/"/>
    <id>http://wusuiwei.github.io/2020/05/24/05_读书笔记/书籍购买-20191112/</id>
    <published>2020-05-24T14:28:44.565Z</published>
    <updated>2020-05-24T14:28:44.565Z</updated>
    
    <content type="html"><![CDATA[<p>计算机基础相关</p><p>数据库</p><p>java语言相关</p><p>网络</p><p>《计算机程序的构造和解释》</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;计算机基础相关&lt;/p&gt;
&lt;p&gt;数据库&lt;/p&gt;
&lt;p&gt;java语言相关&lt;/p&gt;
&lt;p&gt;网络&lt;/p&gt;
&lt;p&gt;《计算机程序的构造和解释》&lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>05_读书笔记/《白说》</title>
    <link href="http://wusuiwei.github.io/2020/05/24/05_%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E3%80%8A%E7%99%BD%E8%AF%B4%E3%80%8B/"/>
    <id>http://wusuiwei.github.io/2020/05/24/05_读书笔记/《白说》/</id>
    <published>2020-05-24T14:28:44.563Z</published>
    <updated>2020-05-24T14:28:44.563Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>04_项目笔记/谷粒学院/项目概要</title>
    <link href="http://wusuiwei.github.io/2020/05/24/04_%E9%A1%B9%E7%9B%AE%E7%AC%94%E8%AE%B0/%E8%B0%B7%E7%B2%92%E5%AD%A6%E9%99%A2/%E9%A1%B9%E7%9B%AE%E6%A6%82%E8%A6%81/"/>
    <id>http://wusuiwei.github.io/2020/05/24/04_项目笔记/谷粒学院/项目概要/</id>
    <published>2020-05-24T14:28:44.562Z</published>
    <updated>2020-05-24T14:28:44.562Z</updated>
    
    <content type="html"><![CDATA[<p><strong>工具使用</strong>：</p><ul><li>IDEA</li><li>EZDML</li><li></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;工具使用&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IDEA&lt;/li&gt;
&lt;li&gt;EZDML&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>04_项目笔记/hydrogen-master/【Hydrogen】项目环境搭建</title>
    <link href="http://wusuiwei.github.io/2020/05/24/04_%E9%A1%B9%E7%9B%AE%E7%AC%94%E8%AE%B0/hydrogen-master/%E3%80%90Hydrogen%E3%80%91%E9%A1%B9%E7%9B%AE%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://wusuiwei.github.io/2020/05/24/04_项目笔记/hydrogen-master/【Hydrogen】项目环境搭建/</id>
    <published>2020-05-24T14:28:44.556Z</published>
    <updated>2020-05-24T14:28:44.557Z</updated>
    
    <content type="html"><![CDATA[<p>登录页：</p><ul><li>登录（自动注册）</li><li>忘记密码</li></ul><p>账号信息</p><p>项目组管理：</p><ul><li>项目列表</li><li>邀请加入项目组</li><li>移交管理员</li><li>删除成员</li><li>退出项目组/解散项目组（仅自己一个人时可解散）</li></ul><p>测试数据库管理：</p><ul><li>mysql</li></ul><p>用例管理：</p><ul><li>新增用例</li><li>修改用例</li><li>删除用例</li><li>运行用例</li><li>复制用例</li></ul><p>测试用例集管理：</p><ul><li>新增用例集</li></ul><p>参数化环境管理</p><ul><li>查询</li><li>新增</li><li>修改</li><li>删除</li><li>参数值管理<ul><li>查询</li><li>新增</li><li>修改</li><li>删除</li></ul></li></ul><p>测试报告</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;登录页：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;登录（自动注册）&lt;/li&gt;
&lt;li&gt;忘记密码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;账号信息&lt;/p&gt;
&lt;p&gt;项目组管理：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;项目列表&lt;/li&gt;
&lt;li&gt;邀请加入项目组&lt;/li&gt;
&lt;li&gt;移交管理员&lt;/li&gt;
&lt;li&gt;删除成员
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>04_项目笔记/hydrogen-master/【Hydrogen】团队维护</title>
    <link href="http://wusuiwei.github.io/2020/05/24/04_%E9%A1%B9%E7%9B%AE%E7%AC%94%E8%AE%B0/hydrogen-master/%E3%80%90Hydrogen%E3%80%91%E5%9B%A2%E9%98%9F%E7%BB%B4%E6%8A%A4/"/>
    <id>http://wusuiwei.github.io/2020/05/24/04_项目笔记/hydrogen-master/【Hydrogen】团队维护/</id>
    <published>2020-05-24T14:28:44.552Z</published>
    <updated>2020-05-24T14:28:44.552Z</updated>
    
    <content type="html"><![CDATA[<p>整个界面采用简单的人员管理界面，提供<strong>人员名称</strong>、<strong>邮箱</strong>模糊搜索功能，分页功能，邀请加入功能，移除功能；</p><p>表设计：</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;整个界面采用简单的人员管理界面，提供&lt;strong&gt;人员名称&lt;/strong&gt;、&lt;strong&gt;邮箱&lt;/strong&gt;模糊搜索功能，分页功能，邀请加入功能，移除功能；&lt;/p&gt;
&lt;p&gt;表设计：&lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>02_全栈笔记/自动化测试模式介绍</title>
    <link href="http://wusuiwei.github.io/2020/05/24/02_%E5%85%A8%E6%A0%88%E7%AC%94%E8%AE%B0/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A8%A1%E5%BC%8F%E4%BB%8B%E7%BB%8D/"/>
    <id>http://wusuiwei.github.io/2020/05/24/02_全栈笔记/自动化测试模式介绍/</id>
    <published>2020-05-24T14:28:44.528Z</published>
    <updated>2020-05-24T14:28:44.528Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>02_全栈笔记/云原生的12要素</title>
    <link href="http://wusuiwei.github.io/2020/05/24/02_%E5%85%A8%E6%A0%88%E7%AC%94%E8%AE%B0/%E4%BA%91%E5%8E%9F%E7%94%9F%E7%9A%8412%E8%A6%81%E7%B4%A0/"/>
    <id>http://wusuiwei.github.io/2020/05/24/02_全栈笔记/云原生的12要素/</id>
    <published>2020-05-24T14:28:44.520Z</published>
    <updated>2020-05-24T14:28:44.520Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>02_全栈笔记/【SpringCloud】Eureka</title>
    <link href="http://wusuiwei.github.io/2020/05/24/02_%E5%85%A8%E6%A0%88%E7%AC%94%E8%AE%B0/%E3%80%90SpringCloud%E3%80%91Eureka/"/>
    <id>http://wusuiwei.github.io/2020/05/24/02_全栈笔记/【SpringCloud】Eureka/</id>
    <published>2020-05-24T14:28:44.504Z</published>
    <updated>2020-05-24T14:28:44.504Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>02_全栈笔记/Zookeeper学习笔记</title>
    <link href="http://wusuiwei.github.io/2020/05/24/02_%E5%85%A8%E6%A0%88%E7%AC%94%E8%AE%B0/Zookeeper%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://wusuiwei.github.io/2020/05/24/02_全栈笔记/Zookeeper学习笔记/</id>
    <published>2020-05-24T14:28:44.459Z</published>
    <updated>2020-05-24T14:28:44.460Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Docker安装Zookeeper"><a href="#Docker安装Zookeeper" class="headerlink" title="Docker安装Zookeeper"></a>Docker安装Zookeeper</h3><h4 id="下载zookeeper镜像"><a href="#下载zookeeper镜像" class="headerlink" title="下载zookeeper镜像"></a>下载zookeeper镜像</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull zookeeper</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Docker安装Zookeeper&quot;&gt;&lt;a href=&quot;#Docker安装Zookeeper&quot; class=&quot;headerlink&quot; title=&quot;Docker安装Zookeeper&quot;&gt;&lt;/a&gt;Docker安装Zookeeper&lt;/h3&gt;&lt;h4 id=&quot;下载zoo
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>02_全栈笔记/Web自动化测试之Selenium Webdriver入门</title>
    <link href="http://wusuiwei.github.io/2020/05/24/02_%E5%85%A8%E6%A0%88%E7%AC%94%E8%AE%B0/Web%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E4%B9%8BSelenium%20Webdriver%E5%85%A5%E9%97%A8/"/>
    <id>http://wusuiwei.github.io/2020/05/24/02_全栈笔记/Web自动化测试之Selenium Webdriver入门/</id>
    <published>2020-05-24T14:28:44.455Z</published>
    <updated>2020-05-24T14:28:44.455Z</updated>
    
    <content type="html"><![CDATA[<h2 id="元素定位方法"><a href="#元素定位方法" class="headerlink" title="元素定位方法"></a>元素定位方法</h2><p><code>id</code>定位</p><p><code>class</code>定位</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;元素定位方法&quot;&gt;&lt;a href=&quot;#元素定位方法&quot; class=&quot;headerlink&quot; title=&quot;元素定位方法&quot;&gt;&lt;/a&gt;元素定位方法&lt;/h2&gt;&lt;p&gt;&lt;code&gt;id&lt;/code&gt;定位&lt;/p&gt;
&lt;p&gt;&lt;code&gt;class&lt;/code&gt;定位&lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>02_全栈笔记/Vue知识框架</title>
    <link href="http://wusuiwei.github.io/2020/05/24/02_%E5%85%A8%E6%A0%88%E7%AC%94%E8%AE%B0/Vue%E7%9F%A5%E8%AF%86%E6%A1%86%E6%9E%B6/"/>
    <id>http://wusuiwei.github.io/2020/05/24/02_全栈笔记/Vue知识框架/</id>
    <published>2020-05-24T14:28:44.452Z</published>
    <updated>2020-05-24T14:28:44.452Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>02_全栈笔记/Web自动化测试之PageObject思想</title>
    <link href="http://wusuiwei.github.io/2020/05/24/02_%E5%85%A8%E6%A0%88%E7%AC%94%E8%AE%B0/Web%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E4%B9%8BPageObject%E6%80%9D%E6%83%B3/"/>
    <id>http://wusuiwei.github.io/2020/05/24/02_全栈笔记/Web自动化测试之PageObject思想/</id>
    <published>2020-05-24T14:28:44.452Z</published>
    <updated>2020-05-24T14:28:44.452Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>02_全栈笔记/SpringMVC学习笔记</title>
    <link href="http://wusuiwei.github.io/2020/05/24/02_%E5%85%A8%E6%A0%88%E7%AC%94%E8%AE%B0/SpringMVC%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://wusuiwei.github.io/2020/05/24/02_全栈笔记/SpringMVC学习笔记/</id>
    <published>2020-05-24T14:28:44.450Z</published>
    <updated>2020-05-24T14:28:44.450Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>02_全栈笔记/Spring Cloud 笔记之 Ribbon</title>
    <link href="http://wusuiwei.github.io/2020/05/24/02_%E5%85%A8%E6%A0%88%E7%AC%94%E8%AE%B0/Spring%20Cloud%20%E7%AC%94%E8%AE%B0%E4%B9%8B%20Ribbon/"/>
    <id>http://wusuiwei.github.io/2020/05/24/02_全栈笔记/Spring Cloud 笔记之 Ribbon/</id>
    <published>2020-05-24T14:28:44.445Z</published>
    <updated>2020-05-24T14:28:44.445Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>02_全栈笔记/Spring Cloud 笔记之 Feign</title>
    <link href="http://wusuiwei.github.io/2020/05/24/02_%E5%85%A8%E6%A0%88%E7%AC%94%E8%AE%B0/Spring%20Cloud%20%E7%AC%94%E8%AE%B0%E4%B9%8B%20Feign/"/>
    <id>http://wusuiwei.github.io/2020/05/24/02_全栈笔记/Spring Cloud 笔记之 Feign/</id>
    <published>2020-05-24T14:28:44.444Z</published>
    <updated>2020-05-24T14:28:44.444Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
</feed>
